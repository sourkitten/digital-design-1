// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "11/20/2021 19:38:11"

// 
// Device: Altera EP2C35F672C6 Package FBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Question1p3 (
	F1,
	Z,
	Y,
	X,
	F2);
output 	F1;
input 	Z;
input 	Y;
input 	X;
output 	F2;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Y~combout ;
wire \Z~combout ;
wire \X~combout ;
wire \nand3-1~0_combout ;
wire \nand3-2~0_combout ;


cycloneii_io \Y~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Y~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Y));
// synopsys translate_off
defparam \Y~I .input_async_reset = "none";
defparam \Y~I .input_power_up = "low";
defparam \Y~I .input_register_mode = "none";
defparam \Y~I .input_sync_reset = "none";
defparam \Y~I .oe_async_reset = "none";
defparam \Y~I .oe_power_up = "low";
defparam \Y~I .oe_register_mode = "none";
defparam \Y~I .oe_sync_reset = "none";
defparam \Y~I .operation_mode = "input";
defparam \Y~I .output_async_reset = "none";
defparam \Y~I .output_power_up = "low";
defparam \Y~I .output_register_mode = "none";
defparam \Y~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Z~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Z~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Z));
// synopsys translate_off
defparam \Z~I .input_async_reset = "none";
defparam \Z~I .input_power_up = "low";
defparam \Z~I .input_register_mode = "none";
defparam \Z~I .input_sync_reset = "none";
defparam \Z~I .oe_async_reset = "none";
defparam \Z~I .oe_power_up = "low";
defparam \Z~I .oe_register_mode = "none";
defparam \Z~I .oe_sync_reset = "none";
defparam \Z~I .operation_mode = "input";
defparam \Z~I .output_async_reset = "none";
defparam \Z~I .output_power_up = "low";
defparam \Z~I .output_register_mode = "none";
defparam \Z~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \X~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\X~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(X));
// synopsys translate_off
defparam \X~I .input_async_reset = "none";
defparam \X~I .input_power_up = "low";
defparam \X~I .input_register_mode = "none";
defparam \X~I .input_sync_reset = "none";
defparam \X~I .oe_async_reset = "none";
defparam \X~I .oe_power_up = "low";
defparam \X~I .oe_register_mode = "none";
defparam \X~I .oe_sync_reset = "none";
defparam \X~I .operation_mode = "input";
defparam \X~I .output_async_reset = "none";
defparam \X~I .output_power_up = "low";
defparam \X~I .output_register_mode = "none";
defparam \X~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \nand3-1~0 (
// Equation(s):
// \nand3-1~0_combout  = (\Z~combout  & ((!\X~combout ))) # (!\Z~combout  & ((\Y~combout ) # (\X~combout )))

	.dataa(\Y~combout ),
	.datab(vcc),
	.datac(\Z~combout ),
	.datad(\X~combout ),
	.cin(gnd),
	.combout(\nand3-1~0_combout ),
	.cout());
// synopsys translate_off
defparam \nand3-1~0 .lut_mask = 16'h0FFA;
defparam \nand3-1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \nand3-2~0 (
// Equation(s):
// \nand3-2~0_combout  = (\Z~combout  & ((\X~combout ) # (\Y~combout ))) # (!\Z~combout  & ((!\Y~combout )))

	.dataa(\Z~combout ),
	.datab(\X~combout ),
	.datac(vcc),
	.datad(\Y~combout ),
	.cin(gnd),
	.combout(\nand3-2~0_combout ),
	.cout());
// synopsys translate_off
defparam \nand3-2~0 .lut_mask = 16'hAADD;
defparam \nand3-2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \F1~I (
	.datain(!\nand3-1~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(F1));
// synopsys translate_off
defparam \F1~I .input_async_reset = "none";
defparam \F1~I .input_power_up = "low";
defparam \F1~I .input_register_mode = "none";
defparam \F1~I .input_sync_reset = "none";
defparam \F1~I .oe_async_reset = "none";
defparam \F1~I .oe_power_up = "low";
defparam \F1~I .oe_register_mode = "none";
defparam \F1~I .oe_sync_reset = "none";
defparam \F1~I .operation_mode = "output";
defparam \F1~I .output_async_reset = "none";
defparam \F1~I .output_power_up = "low";
defparam \F1~I .output_register_mode = "none";
defparam \F1~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \F2~I (
	.datain(!\nand3-2~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(F2));
// synopsys translate_off
defparam \F2~I .input_async_reset = "none";
defparam \F2~I .input_power_up = "low";
defparam \F2~I .input_register_mode = "none";
defparam \F2~I .input_sync_reset = "none";
defparam \F2~I .oe_async_reset = "none";
defparam \F2~I .oe_power_up = "low";
defparam \F2~I .oe_register_mode = "none";
defparam \F2~I .oe_sync_reset = "none";
defparam \F2~I .operation_mode = "output";
defparam \F2~I .output_async_reset = "none";
defparam \F2~I .output_power_up = "low";
defparam \F2~I .output_register_mode = "none";
defparam \F2~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
